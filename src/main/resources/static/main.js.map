{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-task/add-task.component.css","webpack:///./src/app/add-task/add-task.component.html","webpack:///./src/app/add-task/add-task.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/task-details/task-details.component.css","webpack:///./src/app/task-details/task-details.component.html","webpack:///./src/app/task-details/task-details.component.ts","webpack:///./src/app/task-edit/task-edit.component.css","webpack:///./src/app/task-edit/task-edit.component.html","webpack:///./src/app/task-edit/task-edit.component.ts","webpack:///./src/app/task-list/task-list.component.css","webpack:///./src/app/task-list/task-list.component.html","webpack:///./src/app/task-list/task-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Add New Contact</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form (ngSubmit)=\\\"addTask()\\\" #taskForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.name\\\" name=\\\"name\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"startDate\\\">startdate</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"endDate\\\">Address</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.endDate\\\" name=\\\"endDate\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <h1>Участники</h1>\\n          <ul>\\n            <li  *ngFor=\\\"let person of people\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [checked]=\\\"person.id\\\"  name=\\\"personName\\\">\\n              <label for=\\\"personName\\\">{{person.fName}}</label>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!taskForm.form.valid\\\">Save</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent implements OnInit {\n    task = {};\n    people = {};\n\n    constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n      this.http.get('/tasks/people').subscribe(data => {\n          this.people = data;\n      });\n  }\n\n    addTask() {\n        this.http.post('/tasks', this.task)\n            .subscribe(res => {\n                    this.router.navigate(['/task', res]);\n                }, (err) => {\n                    console.log(err);\n                }\n            );\n    }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { TaskDetailsComponent } from './task-details/task-details.component';\nimport { TaskEditComponent } from './task-edit/task-edit.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'tasks',\n    component: TaskListComponent,\n    data: { title: 'Task List' }\n  },\n  { path: '',\n    redirectTo: '/tasks',\n    pathMatch: 'full'\n  },\n   {\n     path: 'task-create',\n     component: AddTaskComponent,\n     data: { title: 'Add task' }\n   },\n  {\n    path: 'task-edit/:id',\n    component: TaskEditComponent,\n    data: { title: 'Edit Contact' }\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskListComponent,\n    AddTaskComponent,\n    TaskDetailsComponent,\n    TaskEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true }\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>{{ task.name }}</h1>\\n  <dl class=\\\"list\\\">\\n    <dt>Address</dt>\\n    <dd>{{ task.startDate }}</dd>\\n    <dt>City</dt>\\n    <dd>{{ task.endDate }}</dd>\\n    <dt>Phone</dt>\\n    <dd>{{ task.person }}</dd>\\n  </dl>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <a [routerLink]=\\\"['/task-edit', task.id]\\\" class=\\\"btn btn-success\\\">EDIT</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-task-details',\n  templateUrl: './task-details.component.html',\n  styleUrls: ['./task-details.component.css']\n})\nexport class TaskDetailsComponent implements OnInit {\n\n  task = {};\n\n    constructor(private route: ActivatedRoute, private http: HttpClient) { }\n\n  ngOnInit() {\n      this.getTaskDetails(this.route.snapshot.params['id']);\n  }\n    getTaskDetails(id) {\n        this.http.get('/tasks/'+id).subscribe(data => {\n            this.task = data;\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>ChangeContact</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form (ngSubmit)=\\\"updateTask(task.id)\\\" #taskForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.name\\\" name=\\\"name\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"startDate\\\">startdate</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"endDate\\\">Address</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.endDate\\\" name=\\\"endDate\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <h1>Участники</h1>\\n          <ul>\\n            <li  *ngFor=\\\"let person of people\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [checked]=\\\"person.id\\\"  name=\\\"personName\\\">\\n              <label for=\\\"personName\\\">{{person.fName}}</label>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!taskForm.form.valid\\\">Save</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-task-edit',\n  templateUrl: './task-edit.component.html',\n  styleUrls: ['./task-edit.component.css']\n})\nexport class TaskEditComponent implements OnInit {\n\n  task = {};\n  people = {};\n\n  constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.http.get('/tasks/people').subscribe(data => {\n      this.people = data;\n    });\n    this.getTask(this.route.snapshot.params.id);\n  }\n\n  getTask(id) {\n    this.http.get('/tasks/'+id).subscribe(data => {\n      this.task = data;\n    });\n  }\n\n  updateTask(id, data) {\n    console.log(id);\n    this.http.put('/tasks/'+id, data)\n      .subscribe(res => {\n          let id = res['id'];\n          this.router.navigate(['/task', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <table class=\\\"table\\\">\\n        <thead>\\n        <tr>\\n            <th>Дата начала</th>\\n            <th>Дата окончания</th>\\n            <th>Название</th>\\n            <th>участники</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let task of TaskList\\\">\\n            <td>{{ task.startDate }}</td>\\n            <td>{{ task.endDate }}</td>\\n            <td>{{ task.name }}</td>\\n            <td> <span *ngFor=\\\"let person of task.person\\\">{{ person.fName }}; </span></td>\\n            <td><button class=\\\"edit btn btn-success\\\" [routerLink]=\\\"['/task-edit', task.id]\\\">Редактировать</button></td>\\n            <td><button class=\\\"delete btn btn-danger\\\" (click)=\\\"deleteTask(task.id)\\\">Удалить</button></td>\\n        </tr>\\n        </tbody>\\n    </table>\\n    <button [routerLink]=\\\"['/task-create']\\\" class=\\\"addTask btn btn-primary\\\">Добавить задание</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n\n    TaskList: any;\n  constructor(private router: Router, private route: ActivatedRoute, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get('/tasks').subscribe(data => {\n      this.TaskList = data;\n    });\n  }\n\n  deleteTask(id) {\n    this.http.delete('/tasks/'+id)\n      .subscribe(res => {\n          this.router.navigate(['/tasks']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}