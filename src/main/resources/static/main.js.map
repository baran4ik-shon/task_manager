{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-task/add-task.component.css","webpack:///./src/app/add-task/add-task.component.html","webpack:///./src/app/add-task/add-task.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit-task/task-edit.component.css","webpack:///./src/app/edit-task/task-edit.component.html","webpack:///./src/app/edit-task/task-edit.component.ts","webpack:///./src/app/model/task.model.ts","webpack:///./src/app/task-list/task-list.component.css","webpack:///./src/app/task-list/task-list.component.html","webpack:///./src/app/task-list/task-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Cоздание задания</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form (ngSubmit)=\\\"addTask(task)\\\" #taskForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Название</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.taskName\\\" name=\\\"name\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"startDate\\\">Дата начала</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"endDate\\\">Дата окончания</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.endDate\\\" name=\\\"endDate\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <h1>Участники</h1>\\n          <table class=\\\"table\\\">\\n            <tbody>\\n            <tr  *ngFor=\\\"let person of people\\\">\\n              <td>  <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"person.is\\\"  name=\\\"personName\\\"></td>\\n              <td><label for=\\\"personName\\\">{{person.fName}}</label></td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <a href=\\\"/task-list\\\" type=\\\"submit\\\" class=\\\"btn btn-cancel\\\">Отмена</a>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!taskForm.form.valid\\\">Сохранить</button>\\n        </div>\\n      </form>\\n      <div style=\\\"color: red;  border-radius: 5px; padding: 10px; font-size: 16px\\\">{{errorMsg}}</div>\\n    </div>\\n  </div>\\n</div>\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Person, Task} from \"../model/task.model\";\nimport {Observable} from \"rxjs/internal/Observable\";\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent implements OnInit {\n  task : Task;\n  people : Person[];\n  public errorMsg: string;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n    this.task = new Task();\n    this.http.get<Person[]>('/tasks/people').subscribe(data => {\n      this.people = data;\n    });\n  }\n\n  addTask(data : Task) {\n    this.people.forEach(p => console.log(p.is));\n    data.person = this.people.filter(p => p.is);\n    this.http.post('/tasks', data)\n      .subscribe(() => {\n          this.router.navigate(['/task-list']);\n        }, err=> {\n         this.errorMsg = (<HttpErrorResponse> err).error.message;\n        });\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    return Observable.throw(error.message);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { TaskEditComponent } from './edit-task/task-edit.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'task-list',\n    component: TaskListComponent,\n    data: { title: 'Task List' }\n  },\n  { path: '',\n    redirectTo: '/task-list',\n    pathMatch: 'full'\n  },\n   {\n     path: 'task-create',\n     component: AddTaskComponent,\n     data: { title: 'Add task' }\n   },\n  {\n    path: 'task-edit/:id',\n    component: TaskEditComponent,\n    data: { title: 'Edit Contact' }\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskListComponent,\n    AddTaskComponent,\n    TaskEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(\n      appRoutes,\n      // { enableTracing: true }\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Редактирование задания</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form (ngSubmit)=\\\"updateTask(task.id, task)\\\" #taskForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Название</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.taskName\\\" name=\\\"name\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"startDate\\\">Дата начала</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"endDate\\\">Дата окончания</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"task.endDate\\\" name=\\\"endDate\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <h1>Участники</h1>\\n          <table class=\\\"table\\\">\\n            <tbody>\\n            <tr  *ngFor=\\\"let person of people\\\">\\n              <td>  <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"person.is\\\"  name=\\\"personName\\\"></td>\\n              <td><label for=\\\"personName\\\">{{person.fName}}</label></td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-cancel\\\" routerLinkActive=\\\"/task-list\\\">Отмена</button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!taskForm.form.valid\\\">Сохранить</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport {Person, Task} from '../model/task.model';\nimport {FormsModule} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-task-edit',\n  templateUrl: './task-edit.component.html',\n  styleUrls: ['./task-edit.component.css']\n})\nexport class TaskEditComponent implements OnInit {\n  task : Task;\n  people : Person[];\n  constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.task = new Task();\n    this.http.get<Person[]>('/tasks/people').subscribe(data => {\n      this.people = data;\n    });\n    this.getTask(this.route.snapshot.params['id']);\n  }\n\n  getTask(id) {\n    this.http.get<Task>('/tasks/'+id).subscribe(data => {\n      this.task = data;\n    });\n  }\n\n  updateTask(id,data:Task) {\n    data.person = this.people.filter(p => p.is);\n    console.log(data.person);\n    this.http.put('/tasks/'+ id, data)\n      .subscribe(res => {\n          this.router.navigate(['/task-list']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n}\n","export class Person {\n  id: number;\n  fName: string;\n  is  = false;\n}\n\nexport class Task {\n  id: number;\n  taskName : string;\n  startDate: Date;\n  endDate: Date;\n  person: Person[];\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <table class=\\\"table\\\">\\n        <thead>\\n        <tr>\\n            <th>Дата начала</th>\\n            <th>Дата окончания</th>\\n            <th>Название</th>\\n            <th>Участники</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let task of tasks\\\">\\n            <td>{{ task.startDate | date: 'd-MM-yyyy' }}</td>\\n            <td>{{ task.endDate | date: 'd-MM-yyyy'}}</td>\\n            <td>{{ task.taskName }}</td>\\n            <td> <span *ngFor=\\\"let person of task.person\\\">{{ person.fName }}; </span></td>\\n            <td><button class=\\\"edit btn btn-success\\\" [routerLink]=\\\"['/task-edit', task.id]\\\">Редактировать</button></td>\\n            <td><button class=\\\"delete btn btn-danger\\\" (click)=\\\"deleteTask(task.id)\\\">Удалить</button></td>\\n        </tr>\\n        </tbody>\\n    </table>\\n    <button [routerLink]=\\\"['/task-create']\\\" class=\\\"addTask btn btn-primary\\\">Добавить задание</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {Task} from '../model/task.model';\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n\n  tasks: Task[];\n\n  constructor(private router: Router, private route: ActivatedRoute, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get<Task []>('/tasks').subscribe(data => {\n      this.tasks = data;\n    });\n  }\n\n  deleteTask(id) {\n    this.http.delete('/tasks/'+id)\n      .subscribe( data => {\n          this.tasks = this.tasks.filter(u => u.id !== id);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}